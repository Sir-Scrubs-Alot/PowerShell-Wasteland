# Audits Active Directory to see if any Active Directory user account passwords are set to never expire
get-aduser -filter * -Properties * | select name, samaccountname, Passwordneverexpires


# Audit the default password policy for the domain
Get-ADDefaultDomainPasswordPolicy

# Get all enabled AD User accounts whos password are older than 90 days
Get-ADUser -Filter 'Enabled -eq $True' -Properties * | Where-Object {$_.PasswordLastSet -lt (Get-Date).adddays(-90)} |
select Name,PasswordLastSet, Passwordexpired, Passwordneverexpires


# Find Group Policies linked to Active Directory OU Using PowerShell
$domain = (Get-ADDomain).DNSRoot
Write-Output "Domain: $domain"
$LinkedGPOs = Get-ADOrganizationalUnit -Filter 'Name -like "*Domain Controllers*"' | select -ExpandProperty LinkedGroupPolicyObjects            
$GUIDRegex = "{[a-zA-Z0-9]{8}[-][a-zA-Z0-9]{4}[-][a-zA-Z0-9]{4}[-][a-zA-Z0-9]{4}[-][a-zA-Z0-9]{12}}"            
            
foreach($LinkedGPO in $LinkedGPOs) {            
    $result = [Regex]::Match($LinkedGPO,$GUIDRegex);            
    if($result.Success) {            
        $GPOGuid = $result.Value.TrimStart("{").TrimEnd("}")            
        $gpoapplied = (Get-GPO -Guid $GPOGuid).DisplayName
        Write-Output "GPO Applied: $gpoapplied"        
    }            
            
}


# Get NTFS Permissions On A Directory
Get-Acl -Path <pathToDirectory> | Out-GridView

# Get NTFS Permissions On One Layer of SubDirectories
Get-Childitem -Path <pathTodDirectory> | Get-ACL | Out-GridView



# Copy users from one group and put them into another group 
$originalGroup = "GRP-Marketing"
$newGroup = "GRP-Accounting"
$usersInOriginalGroup = (Get-ADGroupMember $originalGroup).samaccountname
foreach ($user in $usersInOriginalGroup)
{
Add-ADGroupMember -Identity $newGroup -Members $user
}
# Verify that the new users are in the group
(Get-ADGroupMember $newGroup).samaccountname




# Add a list of users to a group
$group = "GRP-Accounting"
# Supply SamAccountNames
$newUsers = "bbunny","dduck","efudd"
foreach ($user in $newUsers)
{
Add-ADGroupMember -Identity $group -Members $user
}


# Audit to see if there are any Active Directory User accounts (enabled only) that are no in a group. Output the difference.  
$aduserlist = (Get-Aduser -filter * -properties * | where enabled -eq true).name
$serviceaccountmembers = (Get-ADGroupMember -Identity GRP-ServiceAccounts).name
$compareaduserwithserviceaccounts = $aduserlist | ?{$serviceaccountmembers -notcontains $_}
$compareaduserwithserviceaccounts




# Add a printer by connecting to a printserver using PowerShell. Note, this method only works for the account that's running the powershell command
Add-Printer -ConnectionName "\\printServer2\Event Printer"

# Add a printer by connecting to a printserver using commandline or PowerShell. Note, this adds the printer to every account on the machine
RUNDLL32 PRINTUI.DLL,PrintUIEntry /ga /n\\PrintServer2\"Event Printer"
